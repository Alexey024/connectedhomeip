# Copyright (c) 2021 Project CHIP Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: 3.1.1. [TC-DIAGETH-1.1] Attributes with server as DUT

config:
    cluster: "Ethernet Network Diagnostics"
    endpoint: 0

tests:
    - label: "read the attribute: PHYRate"
      disabled: true
      optional: true
      pics: PICS_A_PHYRATE
      command: "readAttribute"
      attribute: "PHYRate"
      response:
          constraints:
              type: enum8

    - label: "read the attribute: FullDuplex"
      optional: true
      pics: PICS_A_FULLDUPLEX
      command: "readAttribute"
      attribute: "FullDuplex"
      response:
          constraints:
              type: bool

    - label: "read the attribute: PacketRxCount"
      optional: true
      pics: PICS_A_PACKETRXCOUNT
      command: "readAttribute"
      attribute: "PacketRxCount"
      response:
          constraints:
              type: uint64

    - label: "read the attribute: PacketTxCount"
      optional: true
      pics: PICS_A_PACKETTXCOUNT
      command: "readAttribute"
      attribute: "PacketTxCount"
      response:
          constraints:
              type: uint64

    - label: "read the attribute: TxErrCount"
      optional: true
      pics: PICS_A_TXERRCOUNT
      command: "readAttribute"
      attribute: "TxErrCount"
      response:
          constraints:
              type: uint64

    - label: "read the attribute: CollisionCount"
      optional: true
      pics: PICS_A_COLLISIONCOUNT
      command: "readAttribute"
      attribute: "CollisionCount"
      response:
          constraints:
              type: uint64

    - label: "read the attribute: OverrunCount"
      optional: true
      pics: PICS_A_OVERRUNCOUNT
      command: "readAttribute"
      attribute: "OverrunCount"
      response:
          constraints:
              type: uint64

    - label: "read the attribute: CarrierDetect"
      optional: true
      pics: PICS_A_CARRIERDETECT
      command: "readAttribute"
      attribute: "CarrierDetect"
      response:
          constraints:
              type: bool

    - label: "read the attribute: TimeSinceReset"
      optional: true
      pics: PICS_A_TIMESINCERESET
      command: "readAttribute"
      attribute: "TimeSinceReset"
      response:
          value: 0

    - label: "read the attribute: TimeSinceReset"
      optional: true
      pics: PICS_A_TIMESINCERESET
      command: "readAttribute"
      attribute: "TimeSinceReset"
      response:
          constraints:
              # Looks a bit like uint64 contraints are maxing out at uint32
              type: uint64
              minValue: 0
              maxValue: 0xFFFFFFFF
